version: '3.6'

services:
  postgres:
    image: postgres:13
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: postgrespassword

  graphql-engine:
    image: hasura/graphql-engine:v2.1.1.cli-migrations-v3
    volumes:
      - ./hasura/migrations:/hasura-migrations
      - ./hasura/metadata:/hasura-metadata
    ports:
      - '8080:8080'
    depends_on:
      nginx:
        condition: service_healthy
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      # PG_DATABASE_URL: Seems Hasura uses the above to define default:
      # see: Setting up Hasura migrations
      #      Step 3.1: Initialize database migrations
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true' # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## Must run app with `vercel dev` for this to work
      HASURA_GRAPHQL_AUTH_HOOK: http://localhost:3000/api/hasura/auth
      HASURA_GRAPHQL_ADMIN_SECRET: admin-secret
      ## HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public

  app:
    build:
      context: ./laravel
      dockerfile: ./Dockerfile
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: '5432'
      DB_DATABASE: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgrespassword
    volumes:
      - ./laravel:/var/www
      - ./laravel/services/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - default
    depends_on:
      - postgres

  nginx:
    container_name: nginx
    image: nginx
    restart: unless-stopped
    tty: true
    ports:
      # Host:Container
      - "9000:80"
      - "443:443"
    volumes:
      - ./laravel:/var/www
      - ./laravel/services/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - default
    depends_on:
      - app
    # Hasura needs laravel to have completed migrations
    healthcheck:
      test: "curl localhost:80/api/health"
      interval: 30s
      timeout: 2s
      retries: 5
      start_period: 2m

networks:
  default:
    driver: bridge

volumes:
  db_data: null
