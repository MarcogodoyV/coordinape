type Mutation {
  createUser(
    object: createUserInput!
  ): createUserResponse
}

type Mutation {
  create_circle(
    object: create_circle_input!
  ): create_circle_response
}

type Mutation {
  upload_profile_avatar(
    object: upload_profile_avatar_input!
  ): upload_profile_avatar_response
}

input create_circle_input {
  user_name: String!
  circle_name: String!
  protocol_name: String
  protocol_id: Int
}

input createUserInput {
  circle_id: Int!
  address: String!
  name: String!
  fixed_non_receiver: Boolean
  give_token_remaining: Int
  non_giver: Boolean
  non_receiver: Boolean
  role: Int
  starting_tokens: Int
}

input upload_image_input {
  user_name: String
  image_data_base64: String!
}

input upload_profile_avatar_input {
  image_data_base64: String!
}

type create_circle_response {
  id: Int!
}

type createUserResponse {
  """ Primary key """ id: ID!
  """ The ethereum address of the user """ address: String!
  """ human readable user name """ name: String!
  fixed_non_receiver: Boolean!
  give_token_remaining: Int!
  non_giver: Boolean!
  non_receiver: Boolean!
  role: Int!
  starting_tokens: Int!
}

type upload_image_response {
  url: String
}

type upload_profile_avatar_response {
  profile_id: Int!
}

